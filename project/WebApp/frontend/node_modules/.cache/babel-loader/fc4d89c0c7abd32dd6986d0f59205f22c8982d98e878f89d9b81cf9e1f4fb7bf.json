{"ast":null,"code":"var _jsxFileName = \"/home/abhi/code/project/WebApp/frontend/src/chatbot/OpenAIChatbot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { callOpenAI } from './cohereUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OpenAIChatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    sender: \"bot\",\n    text: \"Hi! I can help you manage your books. Try something like 'Add a book called Dune by Frank Herbert'.\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      sender: \"user\",\n      text: input\n    };\n    setMessages(prev => [...prev, userMessage]);\n    try {\n      const result = await callOpenAI(input);\n      const {\n        intent,\n        data\n      } = result;\n      let responseMessage = \"\";\n      if (intent === \"add\") {\n        await axios.post(\"/api/books\", data);\n        responseMessage = `Book '${data.title}' added.`;\n      } else if (intent === \"delete\") {\n        await axios.delete(`/api/books/${data.id}`);\n        responseMessage = `Book with ID ${data.id} deleted.`;\n      } else if (intent === \"update\") {\n        await axios.put(`/api/books/${data.id}`, data);\n        responseMessage = `Book with ID ${data.id} updated.`;\n      } else if (intent === \"search\") {\n        const res = await axios.get(`/api/books?query=${data.query}`);\n        responseMessage = res.data.length > 0 ? `Found books: ${res.data.map(b => b.title).join(\", \")}` : \"No books found.\";\n      } else {\n        responseMessage = \"Sorry, I couldn't understand that.\";\n      }\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: responseMessage\n      }]);\n    } catch (err) {\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: \"Error: \" + err.message\n      }]);\n    }\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-md mx-auto shadow-lg rounded-2xl bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-64 overflow-y-auto border mb-2 p-2\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mb-1 ${msg.sender === \"user\" ? \"text-right\" : \"text-left\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `inline-block px-3 py-1 rounded-xl ${msg.sender === \"user\" ? \"bg-blue-200\" : \"bg-gray-200\"}`,\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"border rounded-lg p-2 flex-grow\",\n        placeholder: \"Ask something...\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => e.key === 'Enter' && handleSend()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        className: \"bg-blue-500 text-white px-4 py-2 rounded-lg\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(OpenAIChatbot, \"msmixA1yLBqVy9vpmODOVYoRJBg=\");\n_c = OpenAIChatbot;\nexport default OpenAIChatbot;\nvar _c;\n$RefreshReg$(_c, \"OpenAIChatbot\");","map":{"version":3,"names":["React","useState","axios","callOpenAI","jsxDEV","_jsxDEV","OpenAIChatbot","_s","messages","setMessages","sender","text","input","setInput","handleSend","trim","userMessage","prev","result","intent","data","responseMessage","post","title","delete","id","put","res","get","query","length","map","b","join","err","message","className","children","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onKeyDown","key","onClick","_c","$RefreshReg$"],"sources":["/home/abhi/code/project/WebApp/frontend/src/chatbot/OpenAIChatbot.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { callOpenAI } from './cohereUtils';\n\nconst OpenAIChatbot = () => {\n  const [messages, setMessages] = useState([\n    { sender: \"bot\", text: \"Hi! I can help you manage your books. Try something like 'Add a book called Dune by Frank Herbert'.\" }\n  ]);\n  const [input, setInput] = useState(\"\");\n\n  const handleSend = async () => {\n    if (!input.trim()) return;\n\n    const userMessage = { sender: \"user\", text: input };\n    setMessages(prev => [...prev, userMessage]);\n\n    try {\n      const result = await callOpenAI(input);\n      const { intent, data } = result;\n\n      let responseMessage = \"\";\n      if (intent === \"add\") {\n        await axios.post(\"/api/books\", data);\n        responseMessage = `Book '${data.title}' added.`;\n      } else if (intent === \"delete\") {\n        await axios.delete(`/api/books/${data.id}`);\n        responseMessage = `Book with ID ${data.id} deleted.`;\n      } else if (intent === \"update\") {\n        await axios.put(`/api/books/${data.id}`, data);\n        responseMessage = `Book with ID ${data.id} updated.`;\n      } else if (intent === \"search\") {\n        const res = await axios.get(`/api/books?query=${data.query}`);\n        responseMessage = res.data.length > 0\n          ? `Found books: ${res.data.map(b => b.title).join(\", \")}`\n          : \"No books found.\";\n      } else {\n        responseMessage = \"Sorry, I couldn't understand that.\";\n      }\n\n      setMessages(prev => [...prev, { sender: \"bot\", text: responseMessage }]);\n    } catch (err) {\n      setMessages(prev => [...prev, { sender: \"bot\", text: \"Error: \" + err.message }]);\n    }\n\n    setInput(\"\");\n  };\n\n  return (\n    <div className=\"p-4 max-w-md mx-auto shadow-lg rounded-2xl bg-white\">\n      <div className=\"h-64 overflow-y-auto border mb-2 p-2\">\n        {messages.map((msg, index) => (\n          <div key={index} className={`mb-1 ${msg.sender === \"user\" ? \"text-right\" : \"text-left\"}`}>\n            <span className={`inline-block px-3 py-1 rounded-xl ${msg.sender === \"user\" ? \"bg-blue-200\" : \"bg-gray-200\"}`}>\n              {msg.text}\n            </span>\n          </div>\n        ))}\n      </div>\n      <div className=\"flex gap-2\">\n        <input\n          className=\"border rounded-lg p-2 flex-grow\"\n          placeholder=\"Ask something...\"\n          value={input}\n          onChange={e => setInput(e.target.value)}\n          onKeyDown={e => e.key === 'Enter' && handleSend()}\n        />\n        <button onClick={handleSend} className=\"bg-blue-500 text-white px-4 py-2 rounded-lg\">Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default OpenAIChatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}