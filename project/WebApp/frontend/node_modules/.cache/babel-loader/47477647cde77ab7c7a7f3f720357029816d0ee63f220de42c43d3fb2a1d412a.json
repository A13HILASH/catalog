{"ast":null,"code":"import axios from 'axios';\nexport async function callCohere(message) {\n  const prompt = `You are a helpful assistant that returns JSON for book catalog operations.\nRecognize user intent: add, update, delete, search, or help.\nAlways return a JSON object like this:\n\n{\n  \"intent\": \"add\" | \"update\" | \"delete\" | \"search\" | \"help\",\n  \"data\": {\n    \"title\": string | null,\n    \"author\": string | null,\n    \"year\": number | null,\n    \"query\": string | null,\n    \"range\": { \"after\": number, \"before\": number } | null,\n    \"fieldsToUpdate\": { \"title\"?: string, \"author\"?: string, \"year\"?: number } | null\n  }\n}\n\nMessage: ${message}`;\n  try {\n    const response = await axios.post('https://api.cohere.ai/v1/chat', {\n      message: prompt,\n      model: 'command-r-plus',\n      temperature: 0.3,\n      max_tokens: 300,\n      chat_history: []\n    }, {\n      headers: {\n        Authorization: `Bearer YOUR_COHERE_API_KEY`,\n        'Content-Type': 'application/json'\n      }\n    });\n    const match = response.data.text.match(/```json\\n([\\s\\S]*?)\\n```/);\n    if (match) {\n      return JSON.parse(match[1]);\n    } else {\n      throw new Error(\"Could not parse Cohere response\");\n    }\n  } catch (err) {\n    var _err$response;\n    console.error(\"Cohere response:\", (err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err);\n    throw err;\n  }\n}","map":{"version":3,"names":["axios","callCohere","message","prompt","response","post","model","temperature","max_tokens","chat_history","headers","Authorization","match","data","text","JSON","parse","Error","err","_err$response","console","error"],"sources":["/home/abhi/code/project/WebApp/frontend/src/chatbot/cohereUtils.js"],"sourcesContent":["import axios from 'axios';\n\nexport async function callCohere(message) {\n  const prompt = `You are a helpful assistant that returns JSON for book catalog operations.\nRecognize user intent: add, update, delete, search, or help.\nAlways return a JSON object like this:\n\n{\n  \"intent\": \"add\" | \"update\" | \"delete\" | \"search\" | \"help\",\n  \"data\": {\n    \"title\": string | null,\n    \"author\": string | null,\n    \"year\": number | null,\n    \"query\": string | null,\n    \"range\": { \"after\": number, \"before\": number } | null,\n    \"fieldsToUpdate\": { \"title\"?: string, \"author\"?: string, \"year\"?: number } | null\n  }\n}\n\nMessage: ${message}`;\n\n  try {\n    const response = await axios.post(\n      'https://api.cohere.ai/v1/chat',\n      {\n        message: prompt,\n        model: 'command-r-plus',\n        temperature: 0.3,\n        max_tokens: 300,\n        chat_history: [],\n      },\n      {\n        headers: {\n          Authorization: `Bearer YOUR_COHERE_API_KEY`,\n          'Content-Type': 'application/json',\n        },\n      }\n    );\n\n    const match = response.data.text.match(/```json\\n([\\s\\S]*?)\\n```/);\n    if (match) {\n      return JSON.parse(match[1]);\n    } else {\n      throw new Error(\"Could not parse Cohere response\");\n    }\n  } catch (err) {\n    console.error(\"Cohere response:\", err?.response?.data || err);\n    throw err;\n  }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,eAAeC,UAAUA,CAACC,OAAO,EAAE;EACxC,MAAMC,MAAM,GAAG;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAWD,OAAO,EAAE;EAElB,IAAI;IACF,MAAME,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAC/B,+BAA+B,EAC/B;MACEH,OAAO,EAAEC,MAAM;MACfG,KAAK,EAAE,gBAAgB;MACvBC,WAAW,EAAE,GAAG;MAChBC,UAAU,EAAE,GAAG;MACfC,YAAY,EAAE;IAChB,CAAC,EACD;MACEC,OAAO,EAAE;QACPC,aAAa,EAAE,4BAA4B;QAC3C,cAAc,EAAE;MAClB;IACF,CACF,CAAC;IAED,MAAMC,KAAK,GAAGR,QAAQ,CAACS,IAAI,CAACC,IAAI,CAACF,KAAK,CAAC,0BAA0B,CAAC;IAClE,IAAIA,KAAK,EAAE;MACT,OAAOG,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC,MAAM;MACL,MAAM,IAAIK,KAAK,CAAC,iCAAiC,CAAC;IACpD;EACF,CAAC,CAAC,OAAOC,GAAG,EAAE;IAAA,IAAAC,aAAA;IACZC,OAAO,CAACC,KAAK,CAAC,kBAAkB,EAAE,CAAAH,GAAG,aAAHA,GAAG,wBAAAC,aAAA,GAAHD,GAAG,CAAEd,QAAQ,cAAAe,aAAA,uBAAbA,aAAA,CAAeN,IAAI,KAAIK,GAAG,CAAC;IAC7D,MAAMA,GAAG;EACX;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}