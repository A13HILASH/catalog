{"ast":null,"code":"var _jsxFileName = \"/home/abhi/code/project/WebApp/frontend/src/chatbot/CohereChatbot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { addBook, updateBook, deleteBook } from '../services/bookService';\nimport { callCohere } from './cohereUtils';\nimport './chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CohereChatbot({\n  books,\n  loadBooks\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const helpReplies = {\n    add: 'To add a book, type: Add book titled \"Book Name\" by Author Name, published in 2020.',\n    delete: 'To delete a book, type: Delete book titled \"Book Name\" or by author \"Author Name\".',\n    update: 'To update a book, say: Change the title of \"Old Title\" to \"New Title\" or Update publication year of \"Book Name\" to 2020.',\n    search: 'To search for books, type: Find books by \"Author Name\" or books published after 2000.'\n  };\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    const userMessage = input.trim();\n    setMessages(prev => [...prev, {\n      role: 'user',\n      text: userMessage\n    }]);\n    setInput('');\n    try {\n      var _data$title, _data$author, _data$query, _data$query$toLowerCa;\n      const result = await callCohere(userMessage);\n      console.log(\"Parsed result from Cohere:\", result);\n      const {\n        intent,\n        data\n      } = result || {};\n      const title = (data === null || data === void 0 ? void 0 : (_data$title = data.title) === null || _data$title === void 0 ? void 0 : _data$title.trim()) || '';\n      const author = (data === null || data === void 0 ? void 0 : (_data$author = data.author) === null || _data$author === void 0 ? void 0 : _data$author.trim()) || '';\n      const year = parseInt(data === null || data === void 0 ? void 0 : data.year);\n      const query = (data === null || data === void 0 ? void 0 : (_data$query = data.query) === null || _data$query === void 0 ? void 0 : (_data$query$toLowerCa = _data$query.toLowerCase) === null || _data$query$toLowerCa === void 0 ? void 0 : _data$query$toLowerCa.call(_data$query)) || '';\n      const range = (data === null || data === void 0 ? void 0 : data.range) || {};\n      const fieldsToUpdate = (data === null || data === void 0 ? void 0 : data.fieldsToUpdate) || {};\n\n      // Help Queries\n      if (intent === 'help') {\n        const helpKey = (data.query || '').toLowerCase();\n        const matchedKey = Object.keys(helpReplies).find(k => helpKey.includes(k));\n        const helpMessage = helpReplies[matchedKey] || 'You can ask me how to add, delete, update, or search books.';\n        setMessages(m => [...m, {\n          role: 'bot',\n          text: helpMessage\n        }]);\n        return;\n      }\n\n      // Helper to find matching book\n      const matchBook = () => books.find(b => {\n        var _b$title, _b$author;\n        return title && ((_b$title = b.title) === null || _b$title === void 0 ? void 0 : _b$title.toLowerCase()) === title.toLowerCase() || author && ((_b$author = b.author) === null || _b$author === void 0 ? void 0 : _b$author.toLowerCase()) === author.toLowerCase() || !isNaN(year) && b.year === year;\n      });\n\n      // ADD\n      if (intent === 'add') {\n        const newBook = {\n          title: title || 'Unknown',\n          author: author || 'Unknown',\n          year: !isNaN(year) ? year : 0 //new Date().getFullYear()\n        };\n        await addBook(newBook);\n        setMessages(m => [...m, {\n          role: 'bot',\n          text: `Added: \"${newBook.title}\" by ${newBook.author} (${newBook.year})`\n        }]);\n      }\n\n      // DELETE\n      else if (intent === 'delete') {\n        const book = matchBook();\n        if (book) {\n          await deleteBook(book.id);\n          setMessages(m => [...m, {\n            role: 'bot',\n            text: `Deleted book \"${book.title}\" by ${book.author}.`\n          }]);\n        } else {\n          throw new Error('Book to delete not found.');\n        }\n      }\n\n      // UPDATE\n      else if (intent === 'update') {\n        const book = matchBook();\n        if (book) {\n          const updated = {\n            id: book.id,\n            title: fieldsToUpdate.title || title || book.title,\n            author: fieldsToUpdate.author || author || book.author,\n            year: fieldsToUpdate.year || (!isNaN(year) ? year : book.year)\n          };\n          await updateBook(book.id, updated);\n          setMessages(m => [...m, {\n            role: 'bot',\n            text: `Updated book \"${updated.title}\".`\n          }]);\n        } else {\n          throw new Error('Book to update not found.');\n        }\n      }\n\n      // SEARCH\n      else if (intent === 'search') {\n        var _query$toLowerCase, _title$toLowerCase, _author$toLowerCase;\n        let results = [];\n        const lowerQuery = (query === null || query === void 0 ? void 0 : (_query$toLowerCase = query.toLowerCase) === null || _query$toLowerCase === void 0 ? void 0 : _query$toLowerCase.call(query)) || '';\n        const lowerTitleSearch = (title === null || title === void 0 ? void 0 : (_title$toLowerCase = title.toLowerCase) === null || _title$toLowerCase === void 0 ? void 0 : _title$toLowerCase.call(title)) || '';\n        const lowerAuthorSearch = (author === null || author === void 0 ? void 0 : (_author$toLowerCase = author.toLowerCase) === null || _author$toLowerCase === void 0 ? void 0 : _author$toLowerCase.call(author)) || '';\n        const isListAll = lowerQuery === 'all' || lowerQuery.includes('list all');\n        if (isListAll) {\n          results = books;\n        } else {\n          // Helper: normalize book values\n          results = books.filter(b => {\n            var _b$title2, _b$title2$toLowerCase, _b$author2, _b$author2$toLowerCas, _data$range, _data$range2;\n            const lowerTitle = ((_b$title2 = b.title) === null || _b$title2 === void 0 ? void 0 : (_b$title2$toLowerCase = _b$title2.toLowerCase) === null || _b$title2$toLowerCase === void 0 ? void 0 : _b$title2$toLowerCase.call(_b$title2)) || '';\n            const lowerAuthor = ((_b$author2 = b.author) === null || _b$author2 === void 0 ? void 0 : (_b$author2$toLowerCas = _b$author2.toLowerCase) === null || _b$author2$toLowerCas === void 0 ? void 0 : _b$author2$toLowerCas.call(_b$author2)) || '';\n            const matchExactTitle = lowerTitleSearch && lowerTitle === lowerTitleSearch;\n            const matchStartsWithTitle = lowerQuery.includes(\"start\") || lowerQuery.includes(\"begin\") ? lowerTitle.startsWith(lowerTitleSearch || lowerQuery) : false;\n            const matchTitleIncludes = lowerQuery.includes(\"title\") || lowerQuery.includes(\"having\") || lowerQuery.includes(\"with\") ? lowerTitle.includes(lowerTitleSearch || lowerQuery) : false;\n            const matchAuthor = lowerAuthorSearch && lowerAuthor.includes(lowerAuthorSearch);\n            const matchQueryAnywhere = lowerQuery && (lowerTitle.includes(lowerQuery) || lowerAuthor.includes(lowerQuery));\n            const matchYear = !isNaN(year) && b.year === year;\n            const matchRange = ((_data$range = data.range) === null || _data$range === void 0 ? void 0 : _data$range.after) && b.year > parseInt(data.range.after) || ((_data$range2 = data.range) === null || _data$range2 === void 0 ? void 0 : _data$range2.before) && b.year < parseInt(data.range.before);\n            return matchExactTitle ||\n            // exact match (first priority)\n            matchStartsWithTitle || matchTitleIncludes || matchAuthor || matchYear || matchRange || matchQueryAnywhere;\n          });\n\n          // ❗ Special: If an exact match exists, return only it\n          const exact = books.find(b => {\n            var _b$title3;\n            return ((_b$title3 = b.title) === null || _b$title3 === void 0 ? void 0 : _b$title3.toLowerCase()) === lowerTitleSearch;\n          });\n          if (exact && !lowerQuery.includes(\"start\") && !lowerQuery.includes(\"begin\") && !lowerQuery.includes(\"having\") && !lowerQuery.includes(\"title\")) {\n            results = [exact];\n          }\n        }\n        const noFiltersActive = !title && !author && isNaN(year) && !query && !data.range;\n        const finalResults = noFiltersActive ? books : results;\n        if (finalResults.length) {\n          const text = finalResults.map(b => `- ${b.title} by ${b.author} (${b.year})`).join('\\n');\n          setMessages(m => [...m, {\n            role: 'bot',\n            text: `Found ${finalResults.length} book(s):\\n${text}`\n          }]);\n        } else {\n          setMessages(m => [...m, {\n            role: 'bot',\n            text: 'No matching books found.'\n          }]);\n        }\n      }\n      await loadBooks();\n    } catch (error) {\n      console.error(\"Error handling input:\", error);\n      setMessages(m => [...m, {\n        role: 'bot',\n        text: error.message || \"Something went wrong.\"\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Ask something...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.role === 'user' ? 'chat-user' : 'chat-bot',\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.role === 'user' ? 'You' : 'Bot', \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      placeholder: \"Type your message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n}\n_s(CohereChatbot, \"HDAtGPGcvWga1zf1TBXg51T+tsc=\");\n_c = CohereChatbot;\nexport default CohereChatbot;\nvar _c;\n$RefreshReg$(_c, \"CohereChatbot\");","map":{"version":3,"names":["React","useState","addBook","updateBook","deleteBook","callCohere","jsxDEV","_jsxDEV","CohereChatbot","books","loadBooks","_s","messages","setMessages","input","setInput","helpReplies","add","delete","update","search","handleSend","trim","userMessage","prev","role","text","_data$title","_data$author","_data$query","_data$query$toLowerCa","result","console","log","intent","data","title","author","year","parseInt","query","toLowerCase","call","range","fieldsToUpdate","helpKey","matchedKey","Object","keys","find","k","includes","helpMessage","m","matchBook","b","_b$title","_b$author","isNaN","newBook","book","id","Error","updated","_query$toLowerCase","_title$toLowerCase","_author$toLowerCase","results","lowerQuery","lowerTitleSearch","lowerAuthorSearch","isListAll","filter","_b$title2","_b$title2$toLowerCase","_b$author2","_b$author2$toLowerCas","_data$range","_data$range2","lowerTitle","lowerAuthor","matchExactTitle","matchStartsWithTitle","startsWith","matchTitleIncludes","matchAuthor","matchQueryAnywhere","matchYear","matchRange","after","before","exact","_b$title3","noFiltersActive","finalResults","length","map","join","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","msg","idx","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/abhi/code/project/WebApp/frontend/src/chatbot/CohereChatbot.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { addBook, updateBook, deleteBook } from '../services/bookService';\nimport { callCohere } from './cohereUtils';\nimport './chatbot.css';\n\nfunction CohereChatbot({ books, loadBooks }) {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n\n  const helpReplies = {\n    add: 'To add a book, type: Add book titled \"Book Name\" by Author Name, published in 2020.',\n    delete: 'To delete a book, type: Delete book titled \"Book Name\" or by author \"Author Name\".',\n    update: 'To update a book, say: Change the title of \"Old Title\" to \"New Title\" or Update publication year of \"Book Name\" to 2020.',\n    search: 'To search for books, type: Find books by \"Author Name\" or books published after 2000.'\n  };\n\n  const handleSend = async () => {\n    if (!input.trim()) return;\n\n    const userMessage = input.trim();\n    setMessages(prev => [...prev, { role: 'user', text: userMessage }]);\n    setInput('');\n\n    try {\n      const result = await callCohere(userMessage);\n      console.log(\"Parsed result from Cohere:\", result);\n\n      const { intent, data } = result || {};\n      const title = data?.title?.trim() || '';\n      const author = data?.author?.trim() || '';\n      const year = parseInt(data?.year);\n      const query = data?.query?.toLowerCase?.() || '';\n      const range = data?.range || {};\n      const fieldsToUpdate = data?.fieldsToUpdate || {};\n\n      // Help Queries\n      if (intent === 'help') {\n        const helpKey = (data.query || '').toLowerCase();\n        const matchedKey = Object.keys(helpReplies).find(k => helpKey.includes(k));\n        const helpMessage = helpReplies[matchedKey] || 'You can ask me how to add, delete, update, or search books.';\n\n        setMessages(m => [...m, { role: 'bot', text: helpMessage }]);\n        return;\n      }\n\n      // Helper to find matching book\n      const matchBook = () => books.find(b =>\n        (title && b.title?.toLowerCase() === title.toLowerCase()) ||\n        (author && b.author?.toLowerCase() === author.toLowerCase()) ||\n        (!isNaN(year) && b.year === year)\n      );\n\n      // ADD\n      if (intent === 'add') {\n        const newBook = {\n          title: title || 'Unknown',\n          author: author || 'Unknown',\n          year: !isNaN(year) ? year : 0//new Date().getFullYear()\n        };\n        await addBook(newBook);\n        setMessages(m => [...m, { role: 'bot', text: `Added: \"${newBook.title}\" by ${newBook.author} (${newBook.year})` }]);\n      }\n\n      // DELETE\n      else if (intent === 'delete') {\n        const book = matchBook();\n        if (book) {\n          await deleteBook(book.id);\n          setMessages(m => [...m, { role: 'bot', text: `Deleted book \"${book.title}\" by ${book.author}.` }]);\n        } else {\n          throw new Error('Book to delete not found.');\n        }\n      }\n\n      // UPDATE\n      else if (intent === 'update') {\n        const book = matchBook();\n        if (book) {\n          const updated = {\n            id: book.id,\n            title: fieldsToUpdate.title || title || book.title,\n            author: fieldsToUpdate.author || author || book.author,\n            year: fieldsToUpdate.year || (!isNaN(year) ? year : book.year)\n          };\n          await updateBook(book.id, updated);\n          setMessages(m => [...m, { role: 'bot', text: `Updated book \"${updated.title}\".` }]);\n        } else {\n          throw new Error('Book to update not found.');\n        }\n      }\n\n// SEARCH\nelse if (intent === 'search') {\n  let results = [];\n\n  const lowerQuery = query?.toLowerCase?.() || '';\n  const lowerTitleSearch = title?.toLowerCase?.() || '';\n  const lowerAuthorSearch = author?.toLowerCase?.() || '';\n  const isListAll = lowerQuery === 'all' || lowerQuery.includes('list all');\n\n  if (isListAll) {\n    results = books;\n  } else {\n    // Helper: normalize book values\n    results = books.filter(b => {\n      const lowerTitle = b.title?.toLowerCase?.() || '';\n      const lowerAuthor = b.author?.toLowerCase?.() || '';\n\n      const matchExactTitle = lowerTitleSearch && lowerTitle === lowerTitleSearch;\n      const matchStartsWithTitle = lowerQuery.includes(\"start\") || lowerQuery.includes(\"begin\")\n        ? lowerTitle.startsWith(lowerTitleSearch || lowerQuery)\n        : false;\n      const matchTitleIncludes = lowerQuery.includes(\"title\") || lowerQuery.includes(\"having\") || lowerQuery.includes(\"with\")\n        ? lowerTitle.includes(lowerTitleSearch || lowerQuery)\n        : false;\n\n      const matchAuthor = lowerAuthorSearch && lowerAuthor.includes(lowerAuthorSearch);\n      const matchQueryAnywhere = lowerQuery && (lowerTitle.includes(lowerQuery) || lowerAuthor.includes(lowerQuery));\n      const matchYear = !isNaN(year) && b.year === year;\n      const matchRange =\n        (data.range?.after && b.year > parseInt(data.range.after)) ||\n        (data.range?.before && b.year < parseInt(data.range.before));\n\n      return (\n        matchExactTitle || // exact match (first priority)\n        matchStartsWithTitle ||\n        matchTitleIncludes ||\n        matchAuthor ||\n        matchYear ||\n        matchRange ||\n        matchQueryAnywhere\n      );\n    });\n\n    // ❗ Special: If an exact match exists, return only it\n    const exact = books.find(b => b.title?.toLowerCase() === lowerTitleSearch);\n    if (exact && !lowerQuery.includes(\"start\") && !lowerQuery.includes(\"begin\") && !lowerQuery.includes(\"having\") && !lowerQuery.includes(\"title\")) {\n      results = [exact];\n    }\n  }\n\n  const noFiltersActive =\n    !title && !author && isNaN(year) && !query && !data.range;\n\n  const finalResults = noFiltersActive ? books : results;\n\n  if (finalResults.length) {\n    const text = finalResults.map(b => `- ${b.title} by ${b.author} (${b.year})`).join('\\n');\n    setMessages(m => [...m, { role: 'bot', text: `Found ${finalResults.length} book(s):\\n${text}` }]);\n  } else {\n    setMessages(m => [...m, { role: 'bot', text: 'No matching books found.' }]);\n  }\n}\n\n\n      await loadBooks();\n    } catch (error) {\n      console.error(\"Error handling input:\", error);\n      setMessages(m => [...m, { role: 'bot', text: error.message || \"Something went wrong.\" }]);\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <h3>Ask something...</h3>\n      <div className=\"chat-box\">\n        {messages.map((msg, idx) => (\n          <div key={idx} className={msg.role === 'user' ? 'chat-user' : 'chat-bot'}>\n            <strong>{msg.role === 'user' ? 'You' : 'Bot'}:</strong> {msg.text}\n          </div>\n        ))}\n      </div>\n      <input\n        type=\"text\"\n        value={input}\n        onChange={e => setInput(e.target.value)}\n        placeholder=\"Type your message...\"\n      />\n      <button onClick={handleSend}>Send</button>\n    </div>\n  );\n}\n\nexport default CohereChatbot;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,EAAEC,UAAU,EAAEC,UAAU,QAAQ,yBAAyB;AACzE,SAASC,UAAU,QAAQ,eAAe;AAC1C,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,aAAaA,CAAC;EAAEC,KAAK;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAC3C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMe,WAAW,GAAG;IAClBC,GAAG,EAAE,qFAAqF;IAC1FC,MAAM,EAAE,oFAAoF;IAC5FC,MAAM,EAAE,0HAA0H;IAClIC,MAAM,EAAE;EACV,CAAC;EAED,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACP,KAAK,CAACQ,IAAI,CAAC,CAAC,EAAE;IAEnB,MAAMC,WAAW,GAAGT,KAAK,CAACQ,IAAI,CAAC,CAAC;IAChCT,WAAW,CAACW,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;MAAEC,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAEH;IAAY,CAAC,CAAC,CAAC;IACnER,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI;MAAA,IAAAY,WAAA,EAAAC,YAAA,EAAAC,WAAA,EAAAC,qBAAA;MACF,MAAMC,MAAM,GAAG,MAAM1B,UAAU,CAACkB,WAAW,CAAC;MAC5CS,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,MAAM,CAAC;MAEjD,MAAM;QAAEG,MAAM;QAAEC;MAAK,CAAC,GAAGJ,MAAM,IAAI,CAAC,CAAC;MACrC,MAAMK,KAAK,GAAG,CAAAD,IAAI,aAAJA,IAAI,wBAAAR,WAAA,GAAJQ,IAAI,CAAEC,KAAK,cAAAT,WAAA,uBAAXA,WAAA,CAAaL,IAAI,CAAC,CAAC,KAAI,EAAE;MACvC,MAAMe,MAAM,GAAG,CAAAF,IAAI,aAAJA,IAAI,wBAAAP,YAAA,GAAJO,IAAI,CAAEE,MAAM,cAAAT,YAAA,uBAAZA,YAAA,CAAcN,IAAI,CAAC,CAAC,KAAI,EAAE;MACzC,MAAMgB,IAAI,GAAGC,QAAQ,CAACJ,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEG,IAAI,CAAC;MACjC,MAAME,KAAK,GAAG,CAAAL,IAAI,aAAJA,IAAI,wBAAAN,WAAA,GAAJM,IAAI,CAAEK,KAAK,cAAAX,WAAA,wBAAAC,qBAAA,GAAXD,WAAA,CAAaY,WAAW,cAAAX,qBAAA,uBAAxBA,qBAAA,CAAAY,IAAA,CAAAb,WAA2B,CAAC,KAAI,EAAE;MAChD,MAAMc,KAAK,GAAG,CAAAR,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEQ,KAAK,KAAI,CAAC,CAAC;MAC/B,MAAMC,cAAc,GAAG,CAAAT,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAES,cAAc,KAAI,CAAC,CAAC;;MAEjD;MACA,IAAIV,MAAM,KAAK,MAAM,EAAE;QACrB,MAAMW,OAAO,GAAG,CAACV,IAAI,CAACK,KAAK,IAAI,EAAE,EAAEC,WAAW,CAAC,CAAC;QAChD,MAAMK,UAAU,GAAGC,MAAM,CAACC,IAAI,CAAChC,WAAW,CAAC,CAACiC,IAAI,CAACC,CAAC,IAAIL,OAAO,CAACM,QAAQ,CAACD,CAAC,CAAC,CAAC;QAC1E,MAAME,WAAW,GAAGpC,WAAW,CAAC8B,UAAU,CAAC,IAAI,6DAA6D;QAE5GjC,WAAW,CAACwC,CAAC,IAAI,CAAC,GAAGA,CAAC,EAAE;UAAE5B,IAAI,EAAE,KAAK;UAAEC,IAAI,EAAE0B;QAAY,CAAC,CAAC,CAAC;QAC5D;MACF;;MAEA;MACA,MAAME,SAAS,GAAGA,CAAA,KAAM7C,KAAK,CAACwC,IAAI,CAACM,CAAC;QAAA,IAAAC,QAAA,EAAAC,SAAA;QAAA,OACjCrB,KAAK,IAAI,EAAAoB,QAAA,GAAAD,CAAC,CAACnB,KAAK,cAAAoB,QAAA,uBAAPA,QAAA,CAASf,WAAW,CAAC,CAAC,MAAKL,KAAK,CAACK,WAAW,CAAC,CAAC,IACvDJ,MAAM,IAAI,EAAAoB,SAAA,GAAAF,CAAC,CAAClB,MAAM,cAAAoB,SAAA,uBAARA,SAAA,CAAUhB,WAAW,CAAC,CAAC,MAAKJ,MAAM,CAACI,WAAW,CAAC,CAAE,IAC3D,CAACiB,KAAK,CAACpB,IAAI,CAAC,IAAIiB,CAAC,CAACjB,IAAI,KAAKA,IAAK;MAAA,CACnC,CAAC;;MAED;MACA,IAAIJ,MAAM,KAAK,KAAK,EAAE;QACpB,MAAMyB,OAAO,GAAG;UACdvB,KAAK,EAAEA,KAAK,IAAI,SAAS;UACzBC,MAAM,EAAEA,MAAM,IAAI,SAAS;UAC3BC,IAAI,EAAE,CAACoB,KAAK,CAACpB,IAAI,CAAC,GAAGA,IAAI,GAAG,CAAC;QAC/B,CAAC;QACD,MAAMpC,OAAO,CAACyD,OAAO,CAAC;QACtB9C,WAAW,CAACwC,CAAC,IAAI,CAAC,GAAGA,CAAC,EAAE;UAAE5B,IAAI,EAAE,KAAK;UAAEC,IAAI,EAAE,WAAWiC,OAAO,CAACvB,KAAK,QAAQuB,OAAO,CAACtB,MAAM,KAAKsB,OAAO,CAACrB,IAAI;QAAI,CAAC,CAAC,CAAC;MACrH;;MAEA;MAAA,KACK,IAAIJ,MAAM,KAAK,QAAQ,EAAE;QAC5B,MAAM0B,IAAI,GAAGN,SAAS,CAAC,CAAC;QACxB,IAAIM,IAAI,EAAE;UACR,MAAMxD,UAAU,CAACwD,IAAI,CAACC,EAAE,CAAC;UACzBhD,WAAW,CAACwC,CAAC,IAAI,CAAC,GAAGA,CAAC,EAAE;YAAE5B,IAAI,EAAE,KAAK;YAAEC,IAAI,EAAE,iBAAiBkC,IAAI,CAACxB,KAAK,QAAQwB,IAAI,CAACvB,MAAM;UAAI,CAAC,CAAC,CAAC;QACpG,CAAC,MAAM;UACL,MAAM,IAAIyB,KAAK,CAAC,2BAA2B,CAAC;QAC9C;MACF;;MAEA;MAAA,KACK,IAAI5B,MAAM,KAAK,QAAQ,EAAE;QAC5B,MAAM0B,IAAI,GAAGN,SAAS,CAAC,CAAC;QACxB,IAAIM,IAAI,EAAE;UACR,MAAMG,OAAO,GAAG;YACdF,EAAE,EAAED,IAAI,CAACC,EAAE;YACXzB,KAAK,EAAEQ,cAAc,CAACR,KAAK,IAAIA,KAAK,IAAIwB,IAAI,CAACxB,KAAK;YAClDC,MAAM,EAAEO,cAAc,CAACP,MAAM,IAAIA,MAAM,IAAIuB,IAAI,CAACvB,MAAM;YACtDC,IAAI,EAAEM,cAAc,CAACN,IAAI,KAAK,CAACoB,KAAK,CAACpB,IAAI,CAAC,GAAGA,IAAI,GAAGsB,IAAI,CAACtB,IAAI;UAC/D,CAAC;UACD,MAAMnC,UAAU,CAACyD,IAAI,CAACC,EAAE,EAAEE,OAAO,CAAC;UAClClD,WAAW,CAACwC,CAAC,IAAI,CAAC,GAAGA,CAAC,EAAE;YAAE5B,IAAI,EAAE,KAAK;YAAEC,IAAI,EAAE,iBAAiBqC,OAAO,CAAC3B,KAAK;UAAK,CAAC,CAAC,CAAC;QACrF,CAAC,MAAM;UACL,MAAM,IAAI0B,KAAK,CAAC,2BAA2B,CAAC;QAC9C;MACF;;MAEN;MAAA,KACK,IAAI5B,MAAM,KAAK,QAAQ,EAAE;QAAA,IAAA8B,kBAAA,EAAAC,kBAAA,EAAAC,mBAAA;QAC5B,IAAIC,OAAO,GAAG,EAAE;QAEhB,MAAMC,UAAU,GAAG,CAAA5B,KAAK,aAALA,KAAK,wBAAAwB,kBAAA,GAALxB,KAAK,CAAEC,WAAW,cAAAuB,kBAAA,uBAAlBA,kBAAA,CAAAtB,IAAA,CAAAF,KAAqB,CAAC,KAAI,EAAE;QAC/C,MAAM6B,gBAAgB,GAAG,CAAAjC,KAAK,aAALA,KAAK,wBAAA6B,kBAAA,GAAL7B,KAAK,CAAEK,WAAW,cAAAwB,kBAAA,uBAAlBA,kBAAA,CAAAvB,IAAA,CAAAN,KAAqB,CAAC,KAAI,EAAE;QACrD,MAAMkC,iBAAiB,GAAG,CAAAjC,MAAM,aAANA,MAAM,wBAAA6B,mBAAA,GAAN7B,MAAM,CAAEI,WAAW,cAAAyB,mBAAA,uBAAnBA,mBAAA,CAAAxB,IAAA,CAAAL,MAAsB,CAAC,KAAI,EAAE;QACvD,MAAMkC,SAAS,GAAGH,UAAU,KAAK,KAAK,IAAIA,UAAU,CAACjB,QAAQ,CAAC,UAAU,CAAC;QAEzE,IAAIoB,SAAS,EAAE;UACbJ,OAAO,GAAG1D,KAAK;QACjB,CAAC,MAAM;UACL;UACA0D,OAAO,GAAG1D,KAAK,CAAC+D,MAAM,CAACjB,CAAC,IAAI;YAAA,IAAAkB,SAAA,EAAAC,qBAAA,EAAAC,UAAA,EAAAC,qBAAA,EAAAC,WAAA,EAAAC,YAAA;YAC1B,MAAMC,UAAU,GAAG,EAAAN,SAAA,GAAAlB,CAAC,CAACnB,KAAK,cAAAqC,SAAA,wBAAAC,qBAAA,GAAPD,SAAA,CAAShC,WAAW,cAAAiC,qBAAA,uBAApBA,qBAAA,CAAAhC,IAAA,CAAA+B,SAAuB,CAAC,KAAI,EAAE;YACjD,MAAMO,WAAW,GAAG,EAAAL,UAAA,GAAApB,CAAC,CAAClB,MAAM,cAAAsC,UAAA,wBAAAC,qBAAA,GAARD,UAAA,CAAUlC,WAAW,cAAAmC,qBAAA,uBAArBA,qBAAA,CAAAlC,IAAA,CAAAiC,UAAwB,CAAC,KAAI,EAAE;YAEnD,MAAMM,eAAe,GAAGZ,gBAAgB,IAAIU,UAAU,KAAKV,gBAAgB;YAC3E,MAAMa,oBAAoB,GAAGd,UAAU,CAACjB,QAAQ,CAAC,OAAO,CAAC,IAAIiB,UAAU,CAACjB,QAAQ,CAAC,OAAO,CAAC,GACrF4B,UAAU,CAACI,UAAU,CAACd,gBAAgB,IAAID,UAAU,CAAC,GACrD,KAAK;YACT,MAAMgB,kBAAkB,GAAGhB,UAAU,CAACjB,QAAQ,CAAC,OAAO,CAAC,IAAIiB,UAAU,CAACjB,QAAQ,CAAC,QAAQ,CAAC,IAAIiB,UAAU,CAACjB,QAAQ,CAAC,MAAM,CAAC,GACnH4B,UAAU,CAAC5B,QAAQ,CAACkB,gBAAgB,IAAID,UAAU,CAAC,GACnD,KAAK;YAET,MAAMiB,WAAW,GAAGf,iBAAiB,IAAIU,WAAW,CAAC7B,QAAQ,CAACmB,iBAAiB,CAAC;YAChF,MAAMgB,kBAAkB,GAAGlB,UAAU,KAAKW,UAAU,CAAC5B,QAAQ,CAACiB,UAAU,CAAC,IAAIY,WAAW,CAAC7B,QAAQ,CAACiB,UAAU,CAAC,CAAC;YAC9G,MAAMmB,SAAS,GAAG,CAAC7B,KAAK,CAACpB,IAAI,CAAC,IAAIiB,CAAC,CAACjB,IAAI,KAAKA,IAAI;YACjD,MAAMkD,UAAU,GACb,EAAAX,WAAA,GAAA1C,IAAI,CAACQ,KAAK,cAAAkC,WAAA,uBAAVA,WAAA,CAAYY,KAAK,KAAIlC,CAAC,CAACjB,IAAI,GAAGC,QAAQ,CAACJ,IAAI,CAACQ,KAAK,CAAC8C,KAAK,CAAC,IACxD,EAAAX,YAAA,GAAA3C,IAAI,CAACQ,KAAK,cAAAmC,YAAA,uBAAVA,YAAA,CAAYY,MAAM,KAAInC,CAAC,CAACjB,IAAI,GAAGC,QAAQ,CAACJ,IAAI,CAACQ,KAAK,CAAC+C,MAAM,CAAE;YAE9D,OACET,eAAe;YAAI;YACnBC,oBAAoB,IACpBE,kBAAkB,IAClBC,WAAW,IACXE,SAAS,IACTC,UAAU,IACVF,kBAAkB;UAEtB,CAAC,CAAC;;UAEF;UACA,MAAMK,KAAK,GAAGlF,KAAK,CAACwC,IAAI,CAACM,CAAC;YAAA,IAAAqC,SAAA;YAAA,OAAI,EAAAA,SAAA,GAAArC,CAAC,CAACnB,KAAK,cAAAwD,SAAA,uBAAPA,SAAA,CAASnD,WAAW,CAAC,CAAC,MAAK4B,gBAAgB;UAAA,EAAC;UAC1E,IAAIsB,KAAK,IAAI,CAACvB,UAAU,CAACjB,QAAQ,CAAC,OAAO,CAAC,IAAI,CAACiB,UAAU,CAACjB,QAAQ,CAAC,OAAO,CAAC,IAAI,CAACiB,UAAU,CAACjB,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAACiB,UAAU,CAACjB,QAAQ,CAAC,OAAO,CAAC,EAAE;YAC9IgB,OAAO,GAAG,CAACwB,KAAK,CAAC;UACnB;QACF;QAEA,MAAME,eAAe,GACnB,CAACzD,KAAK,IAAI,CAACC,MAAM,IAAIqB,KAAK,CAACpB,IAAI,CAAC,IAAI,CAACE,KAAK,IAAI,CAACL,IAAI,CAACQ,KAAK;QAE3D,MAAMmD,YAAY,GAAGD,eAAe,GAAGpF,KAAK,GAAG0D,OAAO;QAEtD,IAAI2B,YAAY,CAACC,MAAM,EAAE;UACvB,MAAMrE,IAAI,GAAGoE,YAAY,CAACE,GAAG,CAACzC,CAAC,IAAI,KAAKA,CAAC,CAACnB,KAAK,OAAOmB,CAAC,CAAClB,MAAM,KAAKkB,CAAC,CAACjB,IAAI,GAAG,CAAC,CAAC2D,IAAI,CAAC,IAAI,CAAC;UACxFpF,WAAW,CAACwC,CAAC,IAAI,CAAC,GAAGA,CAAC,EAAE;YAAE5B,IAAI,EAAE,KAAK;YAAEC,IAAI,EAAE,SAASoE,YAAY,CAACC,MAAM,cAAcrE,IAAI;UAAG,CAAC,CAAC,CAAC;QACnG,CAAC,MAAM;UACLb,WAAW,CAACwC,CAAC,IAAI,CAAC,GAAGA,CAAC,EAAE;YAAE5B,IAAI,EAAE,KAAK;YAAEC,IAAI,EAAE;UAA2B,CAAC,CAAC,CAAC;QAC7E;MACF;MAGM,MAAMhB,SAAS,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOwF,KAAK,EAAE;MACdlE,OAAO,CAACkE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CrF,WAAW,CAACwC,CAAC,IAAI,CAAC,GAAGA,CAAC,EAAE;QAAE5B,IAAI,EAAE,KAAK;QAAEC,IAAI,EAAEwE,KAAK,CAACC,OAAO,IAAI;MAAwB,CAAC,CAAC,CAAC;IAC3F;EACF,CAAC;EAED,oBACE5F,OAAA;IAAK6F,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7B9F,OAAA;MAAA8F,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBlG,OAAA;MAAK6F,SAAS,EAAC,UAAU;MAAAC,QAAA,EACtBzF,QAAQ,CAACoF,GAAG,CAAC,CAACU,GAAG,EAAEC,GAAG,kBACrBpG,OAAA;QAAe6F,SAAS,EAAEM,GAAG,CAACjF,IAAI,KAAK,MAAM,GAAG,WAAW,GAAG,UAAW;QAAA4E,QAAA,gBACvE9F,OAAA;UAAA8F,QAAA,GAASK,GAAG,CAACjF,IAAI,KAAK,MAAM,GAAG,KAAK,GAAG,KAAK,EAAC,GAAC;QAAA;UAAA6E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACC,GAAG,CAAChF,IAAI;MAAA,GADzDiF,GAAG;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAER,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNlG,OAAA;MACEqG,IAAI,EAAC,MAAM;MACXC,KAAK,EAAE/F,KAAM;MACbgG,QAAQ,EAAEC,CAAC,IAAIhG,QAAQ,CAACgG,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACxCI,WAAW,EAAC;IAAsB;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACFlG,OAAA;MAAQ2G,OAAO,EAAE7F,UAAW;MAAAgF,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV;AAAC9F,EAAA,CAhLQH,aAAa;AAAA2G,EAAA,GAAb3G,aAAa;AAkLtB,eAAeA,aAAa;AAAC,IAAA2G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}