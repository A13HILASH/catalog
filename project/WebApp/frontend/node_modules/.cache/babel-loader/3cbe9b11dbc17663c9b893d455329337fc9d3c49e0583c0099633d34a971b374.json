{"ast":null,"code":"var _jsxFileName = \"/home/abhi/code/project/WebApp/frontend/src/chatbot/CohereChatbot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { callCohere } from '../chatbot/cohereUtils';\nimport { addBook, updateBook, deleteBook } from '../services/bookService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CohereChatbot({\n  books,\n  loadBooks\n}) {\n  _s();\n  const [userInput, setUserInput] = useState('');\n  const [botResponse, setBotResponse] = useState('Hi! I can help you manage your books. Try something like \"Add a book called Dune by Frank Herbert.\"');\n  const handleSend = async () => {\n    if (!userInput.trim()) return;\n    try {\n      const parsed = await callCohere(userInput);\n      console.log('Parsed result from Cohere:', parsed);\n      const {\n        intent,\n        data\n      } = parsed;\n      if (!intent || !data) {\n        setBotResponse(\"Sorry, I couldn't understand your request.\");\n        return;\n      }\n      switch (intent) {\n        case 'add':\n          await addBook({\n            title: data.title,\n            author: data.author,\n            year: data.year || new Date().getFullYear()\n          });\n          await loadBooks();\n          setBotResponse(`Book \"${data.title}\" by ${data.author} added.`);\n          break;\n        case 'update':\n          const existing = books.find(b => b.id === data.id);\n          if (!existing) {\n            setBotResponse(`Book with ID ${data.id} not found.`);\n            return;\n          }\n          const updated = {\n            ...existing,\n            ...data // override title, author, year if provided\n          };\n          await updateBook(data.id, updated);\n          await loadBooks();\n          setBotResponse(`Book with ID ${data.id} updated.`);\n          break;\n        case 'delete':\n          await deleteBook(data.id);\n          await loadBooks();\n          setBotResponse(`Book with ID ${data.id} deleted.`);\n          break;\n        case 'search':\n          const matches = books.filter(book => data.title && book.title.toLowerCase().includes(data.title.toLowerCase()) || data.author && book.author.toLowerCase().includes(data.author.toLowerCase()) || data.query && (book.title.toLowerCase().includes(data.query.toLowerCase()) || book.author.toLowerCase().includes(data.query.toLowerCase())));\n          if (matches.length === 0) {\n            setBotResponse(\"No matching books found.\");\n          } else {\n            const resultList = matches.map(b => `- ${b.title} by ${b.author}`).join('\\n');\n            setBotResponse(`Found ${matches.length} result(s):\\n${resultList}`);\n          }\n          break;\n        default:\n          setBotResponse(\"Sorry, I don't know how to handle that intent.\");\n      }\n    } catch (err) {\n      console.error(\"Error handling input:\", err);\n      setBotResponse(\"Something went wrong. Try again.\");\n    }\n    setUserInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Ask something...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-response\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"You:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 14\n          }, this), \" \", userInput]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Bot:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 14\n          }, this), \" \", botResponse]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userInput,\n          onChange: e => setUserInput(e.target.value),\n          placeholder: \"Type your message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(CohereChatbot, \"W3Jo87AmaEB4FY1RiNFsXXdpuIg=\");\n_c = CohereChatbot;\nexport default CohereChatbot;\nvar _c;\n$RefreshReg$(_c, \"CohereChatbot\");","map":{"version":3,"names":["React","useState","callCohere","addBook","updateBook","deleteBook","jsxDEV","_jsxDEV","CohereChatbot","books","loadBooks","_s","userInput","setUserInput","botResponse","setBotResponse","handleSend","trim","parsed","console","log","intent","data","title","author","year","Date","getFullYear","existing","find","b","id","updated","matches","filter","book","toLowerCase","includes","query","length","resultList","map","join","err","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/abhi/code/project/WebApp/frontend/src/chatbot/CohereChatbot.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { callCohere } from '../chatbot/cohereUtils';\nimport { addBook, updateBook, deleteBook } from '../services/bookService';\n\nfunction CohereChatbot({ books, loadBooks }) {\n  const [userInput, setUserInput] = useState('');\n  const [botResponse, setBotResponse] = useState('Hi! I can help you manage your books. Try something like \"Add a book called Dune by Frank Herbert.\"');\n\n  const handleSend = async () => {\n    if (!userInput.trim()) return;\n\n    try {\n      const parsed = await callCohere(userInput);\n      console.log('Parsed result from Cohere:', parsed);\n\n      const { intent, data } = parsed;\n\n      if (!intent || !data) {\n        setBotResponse(\"Sorry, I couldn't understand your request.\");\n        return;\n      }\n\n      switch (intent) {\n        case 'add':\n          await addBook({\n            title: data.title,\n            author: data.author,\n            year: data.year || new Date().getFullYear()\n          });\n          await loadBooks();\n          setBotResponse(`Book \"${data.title}\" by ${data.author} added.`);\n          break;\n\n        case 'update':\n          const existing = books.find(b => b.id === data.id);\n          if (!existing) {\n            setBotResponse(`Book with ID ${data.id} not found.`);\n            return;\n          }\n          const updated = {\n            ...existing,\n            ...data // override title, author, year if provided\n          };\n          await updateBook(data.id, updated);\n          await loadBooks();\n          setBotResponse(`Book with ID ${data.id} updated.`);\n          break;\n\n        case 'delete':\n          await deleteBook(data.id);\n          await loadBooks();\n          setBotResponse(`Book with ID ${data.id} deleted.`);\n          break;\n\n        case 'search':\n          const matches = books.filter(book =>\n            (data.title && book.title.toLowerCase().includes(data.title.toLowerCase())) ||\n            (data.author && book.author.toLowerCase().includes(data.author.toLowerCase())) ||\n            (data.query && (book.title.toLowerCase().includes(data.query.toLowerCase()) ||\n                            book.author.toLowerCase().includes(data.query.toLowerCase())))\n          );\n\n          if (matches.length === 0) {\n            setBotResponse(\"No matching books found.\");\n          } else {\n            const resultList = matches.map(b => `- ${b.title} by ${b.author}`).join('\\n');\n            setBotResponse(`Found ${matches.length} result(s):\\n${resultList}`);\n          }\n          break;\n\n        default:\n          setBotResponse(\"Sorry, I don't know how to handle that intent.\");\n      }\n    } catch (err) {\n      console.error(\"Error handling input:\", err);\n      setBotResponse(\"Something went wrong. Try again.\");\n    }\n\n    setUserInput('');\n  };\n\n  return (\n    <div className=\"chatbot-container\">\n      <div className=\"chatbot-box\">\n        <strong>Ask something...</strong>\n        <div className=\"chatbot-response\">\n          <p><strong>You:</strong> {userInput}</p>\n          <p><strong>Bot:</strong> {botResponse}</p>\n        </div>\n        <div className=\"chatbot-input\">\n          <input\n            type=\"text\"\n            value={userInput}\n            onChange={e => setUserInput(e.target.value)}\n            placeholder=\"Type your message...\"\n          />\n          <button onClick={handleSend}>Send</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CohereChatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}