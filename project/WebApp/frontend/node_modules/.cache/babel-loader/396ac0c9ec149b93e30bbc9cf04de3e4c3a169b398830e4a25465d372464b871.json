{"ast":null,"code":"var _jsxFileName = \"/home/abhi/code/project/WebApp/frontend/src/chatbot/CohereChatbot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { callCohere } from './cohereUtils';\nimport { addBook, updateBook, deleteBook, getBooks } from '../services/bookService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CohereChatbot() {\n  _s();\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    const newMessage = {\n      role: 'user',\n      content: input\n    };\n    setMessages(prev => [...prev, newMessage]);\n    setLoading(true);\n    try {\n      const result = await callCohere(input);\n      console.log(\"Parsed result from Cohere:\", result);\n      const {\n        intent,\n        data\n      } = result;\n      let systemResponse = '';\n      switch (intent) {\n        case 'add':\n          if (data !== null && data !== void 0 && data.title && data !== null && data !== void 0 && data.author) {\n            await addBook({\n              title: data.title,\n              author: data.author\n            });\n            systemResponse = `Book \"${data.title}\" by ${data.author} added.`;\n          } else {\n            systemResponse = \"Missing title or author to add the book.\";\n          }\n          break;\n        case 'update':\n          if (data !== null && data !== void 0 && data.id && (data.title || data.author)) {\n            const bookToUpdate = await (await getBooks()).data.find(b => b.id === data.id);\n            if (bookToUpdate) {\n              await updateBook(data.id, {\n                title: data.title || bookToUpdate.title,\n                author: data.author || bookToUpdate.author\n              });\n              systemResponse = `Book with ID ${data.id} updated.`;\n            } else {\n              systemResponse = `No book found with ID ${data.id}.`;\n            }\n          } else {\n            systemResponse = \"Missing ID or fields to update.\";\n          }\n          break;\n        case 'delete':\n          if (data !== null && data !== void 0 && data.id) {\n            await deleteBook(data.id);\n            systemResponse = `Book with ID ${data.id} deleted.`;\n          } else {\n            systemResponse = \"Missing book ID to delete.\";\n          }\n          break;\n        case 'search':\n          if (data !== null && data !== void 0 && data.query) {\n            const allBooks = (await getBooks()).data;\n            const matches = allBooks.filter(book => book.title.toLowerCase().includes(data.query.toLowerCase()) || book.author.toLowerCase().includes(data.query.toLowerCase()));\n            if (matches.length > 0) {\n              systemResponse = `Found ${matches.length} result(s):\\n` + matches.map(b => `- ${b.title} by ${b.author}`).join('\\n');\n            } else {\n              systemResponse = `No books found matching \"${data.query}\".`;\n            }\n          } else {\n            systemResponse = \"Missing search query.\";\n          }\n          break;\n        default:\n          systemResponse = \"Sorry, I didn’t understand that.\";\n      }\n      setMessages(prev => [...prev, {\n        role: 'assistant',\n        content: systemResponse\n      }]);\n    } catch (err) {\n      console.error(\"Error handling input:\", err);\n      setMessages(prev => [...prev, {\n        role: 'assistant',\n        content: 'Something went wrong. Try again.'\n      }]);\n    }\n    setInput('');\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Ask something...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.role === 'user' ? 'user-msg' : 'bot-msg',\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.role === 'user' ? 'You' : 'Bot', \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), \" \", msg.content]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bot-msg\",\n        children: \"Bot: Typing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type your message...\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => e.key === 'Enter' && handleSend()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(CohereChatbot, \"OXuvJDAbcY1ln4be0+GCNCi4LO8=\");\n_c = CohereChatbot;\nexport default CohereChatbot;\nvar _c;\n$RefreshReg$(_c, \"CohereChatbot\");","map":{"version":3,"names":["React","useState","callCohere","addBook","updateBook","deleteBook","getBooks","jsxDEV","_jsxDEV","CohereChatbot","_s","input","setInput","messages","setMessages","loading","setLoading","handleSend","trim","newMessage","role","content","prev","result","console","log","intent","data","systemResponse","title","author","id","bookToUpdate","find","b","query","allBooks","matches","filter","book","toLowerCase","includes","length","map","join","err","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","msg","i","type","placeholder","value","onChange","e","target","onKeyDown","key","onClick","_c","$RefreshReg$"],"sources":["/home/abhi/code/project/WebApp/frontend/src/chatbot/CohereChatbot.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { callCohere } from './cohereUtils';\nimport { addBook, updateBook, deleteBook, getBooks } from '../services/bookService';\n\nfunction CohereChatbot() {\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const handleSend = async () => {\n    if (!input.trim()) return;\n\n    const newMessage = { role: 'user', content: input };\n    setMessages(prev => [...prev, newMessage]);\n    setLoading(true);\n\n    try {\n      const result = await callCohere(input);\n\n      console.log(\"Parsed result from Cohere:\", result);\n\n      const { intent, data } = result;\n\n      let systemResponse = '';\n\n      switch (intent) {\n        case 'add':\n          if (data?.title && data?.author) {\n            await addBook({ title: data.title, author: data.author });\n            systemResponse = `Book \"${data.title}\" by ${data.author} added.`;\n          } else {\n            systemResponse = \"Missing title or author to add the book.\";\n          }\n          break;\n\n        case 'update':\n          if (data?.id && (data.title || data.author)) {\n            const bookToUpdate = await (await getBooks()).data.find(b => b.id === data.id);\n            if (bookToUpdate) {\n              await updateBook(data.id, {\n                title: data.title || bookToUpdate.title,\n                author: data.author || bookToUpdate.author\n              });\n              systemResponse = `Book with ID ${data.id} updated.`;\n            } else {\n              systemResponse = `No book found with ID ${data.id}.`;\n            }\n          } else {\n            systemResponse = \"Missing ID or fields to update.\";\n          }\n          break;\n\n        case 'delete':\n          if (data?.id) {\n            await deleteBook(data.id);\n            systemResponse = `Book with ID ${data.id} deleted.`;\n          } else {\n            systemResponse = \"Missing book ID to delete.\";\n          }\n          break;\n\n        case 'search':\n          if (data?.query) {\n            const allBooks = (await getBooks()).data;\n            const matches = allBooks.filter(book =>\n              book.title.toLowerCase().includes(data.query.toLowerCase()) ||\n              book.author.toLowerCase().includes(data.query.toLowerCase())\n            );\n            if (matches.length > 0) {\n              systemResponse = `Found ${matches.length} result(s):\\n` +\n                matches.map(b => `- ${b.title} by ${b.author}`).join('\\n');\n            } else {\n              systemResponse = `No books found matching \"${data.query}\".`;\n            }\n          } else {\n            systemResponse = \"Missing search query.\";\n          }\n          break;\n\n        default:\n          systemResponse = \"Sorry, I didn’t understand that.\";\n      }\n\n      setMessages(prev => [...prev, { role: 'assistant', content: systemResponse }]);\n    } catch (err) {\n      console.error(\"Error handling input:\", err);\n      setMessages(prev => [...prev, { role: 'assistant', content: 'Something went wrong. Try again.' }]);\n    }\n\n    setInput('');\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"chatbot-box\">\n      <h3>Ask something...</h3>\n      <div className=\"chat-window\">\n        {messages.map((msg, i) => (\n          <div key={i} className={msg.role === 'user' ? 'user-msg' : 'bot-msg'}>\n            <strong>{msg.role === 'user' ? 'You' : 'Bot'}:</strong> {msg.content}\n          </div>\n        ))}\n        {loading && <div className=\"bot-msg\">Bot: Typing...</div>}\n      </div>\n      <div className=\"chat-input\">\n        <input\n          type=\"text\"\n          placeholder=\"Type your message...\"\n          value={input}\n          onChange={e => setInput(e.target.value)}\n          onKeyDown={e => e.key === 'Enter' && handleSend()}\n        />\n        <button onClick={handleSend}>Send</button>\n      </div>\n    </div>\n  );\n}\n\nexport default CohereChatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}