{"ast":null,"code":"var _jsxFileName = \"/home/abhi/code/project/WebApp/frontend/src/chatbot/CohereChatbot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { addBook, updateBook, deleteBook, getBooks } from '../services/bookService';\nimport { callCohere } from './cohereUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CohereChatbot() {\n  _s();\n  const [input, setInput] = useState('');\n  const [response, setResponse] = useState('');\n  const [books, setBooks] = useState([]);\n  useEffect(() => {\n    loadBooks();\n  }, []);\n  const loadBooks = async () => {\n    const res = await getBooks();\n    setBooks(res.data);\n  };\n  const findBookByTitle = title => {\n    return books.find(b => b.title.toLowerCase() === title.toLowerCase());\n  };\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    try {\n      const result = await callCohere(input);\n      console.log('Parsed result from Cohere:', result);\n      const {\n        intent,\n        data\n      } = result;\n      if (intent === 'add') {\n        const newBook = {\n          title: data.title,\n          author: data.author,\n          year: data.year || 2000\n        };\n        await addBook(newBook);\n        setResponse(`Book \"${data.title}\" by ${data.author} added.`);\n      } else if (intent === 'update') {\n        let book = data.id ? books.find(b => b.id === data.id) : findBookByTitle(data.title);\n        if (!book) throw new Error(\"Book to update not found.\");\n        const updatedBook = {\n          ...book,\n          title: data.title || book.title,\n          author: data.author || book.author,\n          year: data.year || book.year\n        };\n        await updateBook(book.id, updatedBook);\n        setResponse(`Book \"${updatedBook.title}\" updated.`);\n      } else if (intent === 'delete') {\n        let book = data.id ? books.find(b => b.id === data.id) : findBookByTitle(data.title);\n        if (!book) throw new Error(\"Book to delete not found.\");\n        await deleteBook(book.id);\n        setResponse(`Book with ID ${book.id} deleted.`);\n      } else if (intent === 'search') {\n        let filtered = books;\n        if (data.title) {\n          filtered = filtered.filter(b => b.title.toLowerCase().includes(data.title.toLowerCase()));\n        }\n        if (data.author) {\n          filtered = filtered.filter(b => b.author.toLowerCase().includes(data.author.toLowerCase()));\n        }\n        if (data.year) {\n          filtered = filtered.filter(b => b.year.toString() === data.year.toString());\n        }\n        if (filtered.length === 0) {\n          setResponse('No books found matching your query.');\n        } else {\n          const formatted = filtered.map(b => `- ${b.title} by ${b.author} (${b.year})`).join('\\n');\n          setResponse(`Found ${filtered.length} result(s):\\n${formatted}`);\n        }\n      }\n      await loadBooks(); // Refresh list on change\n    } catch (err) {\n      console.error('Error handling input:', err);\n      setResponse('Something went wrong. Try again.');\n    }\n    setInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Ask something...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-response\",\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"You: Add a book titled The Hobbit\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => e.key === 'Enter' && handleSend()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(CohereChatbot, \"8O1v/iKIuQOAGrLF3Wr5YD/j0O8=\");\n_c = CohereChatbot;\nexport default CohereChatbot;\nvar _c;\n$RefreshReg$(_c, \"CohereChatbot\");","map":{"version":3,"names":["React","useState","useEffect","addBook","updateBook","deleteBook","getBooks","callCohere","jsxDEV","_jsxDEV","CohereChatbot","_s","input","setInput","response","setResponse","books","setBooks","loadBooks","res","data","findBookByTitle","title","find","b","toLowerCase","handleSend","trim","result","console","log","intent","newBook","author","year","book","id","Error","updatedBook","filtered","filter","includes","toString","length","formatted","map","join","err","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onKeyDown","key","onClick","_c","$RefreshReg$"],"sources":["/home/abhi/code/project/WebApp/frontend/src/chatbot/CohereChatbot.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { addBook, updateBook, deleteBook, getBooks } from '../services/bookService';\nimport { callCohere } from './cohereUtils';\n\nfunction CohereChatbot() {\n  const [input, setInput] = useState('');\n  const [response, setResponse] = useState('');\n  const [books, setBooks] = useState([]);\n\n  useEffect(() => {\n    loadBooks();\n  }, []);\n\n  const loadBooks = async () => {\n    const res = await getBooks();\n    setBooks(res.data);\n  };\n\n  const findBookByTitle = (title) => {\n    return books.find(b => b.title.toLowerCase() === title.toLowerCase());\n  };\n\n  const handleSend = async () => {\n    if (!input.trim()) return;\n\n    try {\n      const result = await callCohere(input);\n      console.log('Parsed result from Cohere:', result);\n\n      const { intent, data } = result;\n\n      if (intent === 'add') {\n        const newBook = {\n          title: data.title,\n          author: data.author,\n          year: data.year || 2000\n        };\n        await addBook(newBook);\n        setResponse(`Book \"${data.title}\" by ${data.author} added.`);\n      }\n\n      else if (intent === 'update') {\n        let book = data.id ? books.find(b => b.id === data.id) : findBookByTitle(data.title);\n        if (!book) throw new Error(\"Book to update not found.\");\n\n        const updatedBook = {\n          ...book,\n          title: data.title || book.title,\n          author: data.author || book.author,\n          year: data.year || book.year\n        };\n\n        await updateBook(book.id, updatedBook);\n        setResponse(`Book \"${updatedBook.title}\" updated.`);\n      }\n\n      else if (intent === 'delete') {\n        let book = data.id ? books.find(b => b.id === data.id) : findBookByTitle(data.title);\n        if (!book) throw new Error(\"Book to delete not found.\");\n        await deleteBook(book.id);\n        setResponse(`Book with ID ${book.id} deleted.`);\n      }\n\n      else if (intent === 'search') {\n        let filtered = books;\n\n        if (data.title) {\n          filtered = filtered.filter(b =>\n            b.title.toLowerCase().includes(data.title.toLowerCase())\n          );\n        }\n\n        if (data.author) {\n          filtered = filtered.filter(b =>\n            b.author.toLowerCase().includes(data.author.toLowerCase())\n          );\n        }\n\n        if (data.year) {\n          filtered = filtered.filter(b =>\n            b.year.toString() === data.year.toString()\n          );\n        }\n\n        if (filtered.length === 0) {\n          setResponse('No books found matching your query.');\n        } else {\n          const formatted = filtered.map(b =>\n            `- ${b.title} by ${b.author} (${b.year})`\n          ).join('\\n');\n          setResponse(`Found ${filtered.length} result(s):\\n${formatted}`);\n        }\n      }\n\n      await loadBooks(); // Refresh list on change\n\n    } catch (err) {\n      console.error('Error handling input:', err);\n      setResponse('Something went wrong. Try again.');\n    }\n\n    setInput('');\n  };\n\n  return (\n    <div className=\"chatbot-container\">\n      <h2>Ask something...</h2>\n      <div className=\"chat-box\">\n        <div className=\"chat-response\">{response}</div>\n        <input\n          type=\"text\"\n          placeholder=\"You: Add a book titled The Hobbit\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onKeyDown={(e) => e.key === 'Enter' && handleSend()}\n        />\n        <button onClick={handleSend}>Send</button>\n      </div>\n    </div>\n  );\n}\n\nexport default CohereChatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}