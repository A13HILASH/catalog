{"ast":null,"code":"var _jsxFileName = \"/home/abhi/code/project/WebApp/frontend/src/chatbot/CohereChatbot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { addBook, updateBook, deleteBook, getBooks } from '../services/bookService';\nimport { callCohere } from './cohereUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CohereChatbot({\n  books,\n  loadBooks\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    const userMessage = input.trim();\n    setMessages([...messages, {\n      role: 'user',\n      text: userMessage\n    }]);\n    setInput('');\n    try {\n      const result = await callCohere(userMessage);\n      console.log(\"Parsed result from Cohere:\", result);\n      const {\n        intent,\n        data\n      } = result;\n\n      // Try to find matching book if id not provided\n      const findBook = () => {\n        return books.find(b => {\n          const titleMatch = data.title && b.title.toLowerCase() === data.title.toLowerCase();\n          const authorMatch = data.author && b.author.toLowerCase() === data.author.toLowerCase();\n          const yearMatch = data.year && b.publicationYear === parseInt(data.year);\n          return titleMatch || authorMatch || yearMatch;\n        });\n      };\n      if (intent === 'add') {\n        const newBook = {\n          title: data.title,\n          author: data.author,\n          publicationYear: data.year || new Date().getFullYear()\n        };\n        await addBook(newBook);\n        setMessages(m => [...m, {\n          role: 'bot',\n          text: `Book \"${data.title}\" by ${data.author} added.`\n        }]);\n      } else if (intent === 'update') {\n        let bookId = data.id;\n        if (!bookId) {\n          const match = findBook();\n          if (match) bookId = match.id;\n        }\n        if (bookId) {\n          const updated = {\n            title: data.title || undefined,\n            author: data.author || undefined,\n            publicationYear: data.year ? parseInt(data.year) : undefined\n          };\n          await updateBook(bookId, updated);\n          setMessages(m => [...m, {\n            role: 'bot',\n            text: `Book with ID ${bookId} updated.`\n          }]);\n        } else {\n          setMessages(m => [...m, {\n            role: 'bot',\n            text: `Book not found for update.`\n          }]);\n        }\n      } else if (intent === 'delete') {\n        let bookId = data.id;\n        if (!bookId) {\n          const match = findBook();\n          if (match) bookId = match.id;\n        }\n        if (bookId) {\n          await deleteBook(bookId);\n          setMessages(m => [...m, {\n            role: 'bot',\n            text: `Book with ID ${bookId} deleted.`\n          }]);\n        } else {\n          setMessages(m => [...m, {\n            role: 'bot',\n            text: `Book not found for deletion.`\n          }]);\n        }\n      } else if (intent === 'search') {\n        var _data$query;\n        const query = ((_data$query = data.query) === null || _data$query === void 0 ? void 0 : _data$query.toLowerCase()) || '';\n        const title = data.title || '';\n        const author = data.author || '';\n        const year = data.year ? parseInt(data.year) : null;\n        const matches = books.filter(b => title && b.title.toLowerCase().includes(title.toLowerCase()) || author && b.author.toLowerCase().includes(author.toLowerCase()) || year && b.publicationYear === year || b.title.toLowerCase().includes(query) || b.author.toLowerCase().includes(query));\n        if (matches.length > 0) {\n          const resultText = matches.map(b => `- ${b.title} by ${b.author} (${b.publicationYear})`).join('\\n');\n          setMessages(m => [...m, {\n            role: 'bot',\n            text: `Found ${matches.length} result(s):\\n${resultText}`\n          }]);\n        } else {\n          setMessages(m => [...m, {\n            role: 'bot',\n            text: `No books found matching your query.`\n          }]);\n        }\n      }\n      await loadBooks(); // Refresh UI\n    } catch (err) {\n      console.error(\"Error handling input:\", err);\n      setMessages(m => [...m, {\n        role: 'bot',\n        text: \"Something went wrong. Try again.\"\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Ask something...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.role === 'user' ? 'chat-user' : 'chat-bot',\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.role === 'user' ? 'You' : 'Bot', \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      placeholder: \"Type your message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(CohereChatbot, \"HDAtGPGcvWga1zf1TBXg51T+tsc=\");\n_c = CohereChatbot;\nexport default CohereChatbot;\nvar _c;\n$RefreshReg$(_c, \"CohereChatbot\");","map":{"version":3,"names":["React","useState","addBook","updateBook","deleteBook","getBooks","callCohere","jsxDEV","_jsxDEV","CohereChatbot","books","loadBooks","_s","messages","setMessages","input","setInput","handleSend","trim","userMessage","role","text","result","console","log","intent","data","findBook","find","b","titleMatch","title","toLowerCase","authorMatch","author","yearMatch","year","publicationYear","parseInt","newBook","Date","getFullYear","m","bookId","id","match","updated","undefined","_data$query","query","matches","filter","includes","length","resultText","map","join","err","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","msg","i","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/abhi/code/project/WebApp/frontend/src/chatbot/CohereChatbot.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { addBook, updateBook, deleteBook, getBooks } from '../services/bookService';\nimport { callCohere } from './cohereUtils';\n\nfunction CohereChatbot({ books, loadBooks }) {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n\n  const handleSend = async () => {\n    if (!input.trim()) return;\n\n    const userMessage = input.trim();\n    setMessages([...messages, { role: 'user', text: userMessage }]);\n    setInput('');\n\n    try {\n      const result = await callCohere(userMessage);\n      console.log(\"Parsed result from Cohere:\", result);\n\n      const { intent, data } = result;\n\n      // Try to find matching book if id not provided\n      const findBook = () => {\n        return books.find(b => {\n          const titleMatch = data.title && b.title.toLowerCase() === data.title.toLowerCase();\n          const authorMatch = data.author && b.author.toLowerCase() === data.author.toLowerCase();\n          const yearMatch = data.year && b.publicationYear === parseInt(data.year);\n          return titleMatch || authorMatch || yearMatch;\n        });\n      };\n\n      if (intent === 'add') {\n        const newBook = {\n          title: data.title,\n          author: data.author,\n          publicationYear: data.year || new Date().getFullYear()\n        };\n        await addBook(newBook);\n        setMessages(m => [...m, { role: 'bot', text: `Book \"${data.title}\" by ${data.author} added.` }]);\n      }\n\n      else if (intent === 'update') {\n        let bookId = data.id;\n        if (!bookId) {\n          const match = findBook();\n          if (match) bookId = match.id;\n        }\n\n        if (bookId) {\n          const updated = {\n            title: data.title || undefined,\n            author: data.author || undefined,\n            publicationYear: data.year ? parseInt(data.year) : undefined,\n          };\n          await updateBook(bookId, updated);\n          setMessages(m => [...m, { role: 'bot', text: `Book with ID ${bookId} updated.` }]);\n        } else {\n          setMessages(m => [...m, { role: 'bot', text: `Book not found for update.` }]);\n        }\n      }\n\n      else if (intent === 'delete') {\n        let bookId = data.id;\n        if (!bookId) {\n          const match = findBook();\n          if (match) bookId = match.id;\n        }\n\n        if (bookId) {\n          await deleteBook(bookId);\n          setMessages(m => [...m, { role: 'bot', text: `Book with ID ${bookId} deleted.` }]);\n        } else {\n          setMessages(m => [...m, { role: 'bot', text: `Book not found for deletion.` }]);\n        }\n      }\n\n      else if (intent === 'search') {\n        const query = data.query?.toLowerCase() || '';\n        const title = data.title || '';\n        const author = data.author || '';\n        const year = data.year ? parseInt(data.year) : null;\n\n        const matches = books.filter(b =>\n          (title && b.title.toLowerCase().includes(title.toLowerCase())) ||\n          (author && b.author.toLowerCase().includes(author.toLowerCase())) ||\n          (year && b.publicationYear === year) ||\n          b.title.toLowerCase().includes(query) ||\n          b.author.toLowerCase().includes(query)\n        );\n\n        if (matches.length > 0) {\n          const resultText = matches.map(b => `- ${b.title} by ${b.author} (${b.publicationYear})`).join('\\n');\n          setMessages(m => [...m, { role: 'bot', text: `Found ${matches.length} result(s):\\n${resultText}` }]);\n        } else {\n          setMessages(m => [...m, { role: 'bot', text: `No books found matching your query.` }]);\n        }\n      }\n\n      await loadBooks(); // Refresh UI\n\n    } catch (err) {\n      console.error(\"Error handling input:\", err);\n      setMessages(m => [...m, { role: 'bot', text: \"Something went wrong. Try again.\" }]);\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <h3>Ask something...</h3>\n      <div className=\"chat-box\">\n        {messages.map((msg, i) => (\n          <div key={i} className={msg.role === 'user' ? 'chat-user' : 'chat-bot'}>\n            <strong>{msg.role === 'user' ? 'You' : 'Bot'}:</strong> {msg.text}\n          </div>\n        ))}\n      </div>\n      <input\n        type=\"text\"\n        value={input}\n        onChange={e => setInput(e.target.value)}\n        placeholder=\"Type your message...\"\n      />\n      <button onClick={handleSend}>Send</button>\n    </div>\n  );\n}\n\nexport default CohereChatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}